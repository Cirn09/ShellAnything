Implement the following:
  ConfigManager::refresh()
    --> Browse through all added "search path" and load all *.xml files.

- Create node Visibility Validity classes. ?? Not sure. Think about Validator and Icon classes that are not Node instances.
- Move ConfigurationManager::registerContext(c) to Context::registerProperties() and Context::unregisterProperties()
- Implement Item::isVisible(const Context & c) const;
- Implement Item::isEnabled(const Context & c) const;
 
- Think about only Item are Node:
  - Modifying Action (ActionClipboard, ActionExecute, ActionOpen, ActionPrompt, ActionProterty), Icon, Validator (Validity, Visibility) to not be defined as "normal classes".
  - Memory cleanup is more compilicated
  - Validator, Icon classes will have their own attributes:
    `Icon * mIcon;`
    `Validator * mVisibility;`
    `Validator * mValidity;`
 
Think about redesigning the Node class:
- The node_type may not need to be set at the Node constructor level, it could have a setNodeType() and a getNodeType() method to allow setting the type when inserting the node as a child:
  For instance, Item::addAction(Action * action) which executes the following: item.addChild(action); action->setNodeType("ACTION");
  With this approch, the implementation of item.getChildren("ACTION") is more meaningful if the class Item is the one that have set "ACTION" as the node type.
- Another option is to NOT CREATE a setNodeType() method but to modify addChild() to addChild(node, type) and have a getNodeType(). This allows settings the node type only when adding the node as a child of another.

