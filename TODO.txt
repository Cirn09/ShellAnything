Implement the following:
  ConfigManager::registerProperties()
  ConfigManager::unregisterProperties()
  ConfigManager::update(Configuration * config) --> Add a new config to the list of configurations. Delete previous existing configuration if any.
  ConfigurationPtrList ConfigManager::getConfigurations()
  ConfigManager::loadFile(const std::string & path, std::string & error)
  ConfigManager::refresh()
    --> Browse through all added "search path" and load all *.xml files.

  Context::(const Context & c)
  Context::operator =(const Context & c)
  

Think about redesigning the Node class:
- The node_type may not need to be set at the Node constructor level, it could have a setNodeType() and a getNodeType() method to allow setting the type when inserting the node as a child:
  For instance, Item::addAction(Action * action) which executes the following: item.addChild(action); action->setNodeType("ACTION");
  With this approch, the implementation of item.getChildren("ACTION") is more meaningful if the class Item is the one that have set "ACTION" as the node type.
- Another option is to NOT CREATE a setNodeType() method but to modify addChild() to addChild(node, type) and have a getNodeType(). This allows settings the node type only when adding the node as a child of another.
